@page  "/playlists"

@using  Helpers
@inject AuthHelper ah
@inject APIHelper sp

@using SpotifyAPI.Web
@using SpotifyAPI.Web.Models

<p>Response: @sp</p>

<p>User: @pp</p>
<p>UserID: @userID</p>
<p>@sp.S.AccessToken</p>


@if (playlist_reader != null)
{
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Owner</th>
                <th>Track Count</th>
                <th>Uri</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var playlist in playlist_reader.Items)
            {
                <tr>
                    <td>@playlist.Name</td>
                    <td>@playlist.Owner.DisplayName</td>
                    <td>@playlist.Tracks.Total</td>
                    <td>@playlist.Id</td>
                </tr>
            }

        </tbody>
    </table>
}
else
{
    <p>Playlists Not Loaded</p>
}

@code {

        PrivateProfile pp; // lol pp
        string userID = "";
        List<SimplePlaylist> parsed_playlists;
        Paging<SimplePlaylist> playlist_reader;

    protected override async Task OnInitializedAsync()
    {


        pp = await sp.S.GetPrivateProfileAsync();

        userID = pp.Id;

        parsed_playlists = new List<SimplePlaylist>();

        // TODO - depaginate
        playlist_reader = await sp.S.GetUserPlaylistsAsync(pp.Id, limit:50);


    }
}