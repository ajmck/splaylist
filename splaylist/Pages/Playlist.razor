@page "/playlists/{id}"

@using splaylist.Helpers
@using SpotifyAPI.Web.Models
@using  Blazorise.DataGrid
@using SpotifyAPI.Web.Helpers;

@inject APIHelper api



@if (loadedPlaylist != null)
{
    <h2>@loadedPlaylist.Name</h2>

    @if (playlistContents != null)
    {
        @* HACK - PageSize ought to be unlimited, but leaving the parameter out will cap it at 5
            Spotify playlists are capped at 10000 so this shouldn't become an issue *@
        <DataGrid TItem="PlaylistTrack" Data="@playlistContents" PageSize="10000" class="table table-hover table-dark">
            <DataGridColumn TItem="PlaylistTrack" Field="Track.Name" Caption="Name" AllowSort="true"/>
            <DataGridColumn TItem="PlaylistTrack" Field="Track.Album.Name" Caption="Album" AllowSort="true"/>
            <DataGridColumn TItem="PlaylistTrack" Field="Track.Artists" Caption="Artists" AllowSort="true">
                <DisplayTemplate>
                    @* below line fails, prints name of object, need to retrieve .Artists.Name*@
                    @(PrintArtists(context as PlaylistTrack))
                </DisplayTemplate>
            </DataGridColumn>

        </DataGrid>
    } else
    {
        <p>Loading Contents...</p>
    }
}
else
{
    <p>Loading Playlist...</p>
}

@code
{

    [Parameter]
    public string id { get; set; }

    FullPlaylist loadedPlaylist;
    PlaylistTrack single;
    List<PlaylistTrack> playlistContents;

    protected override async Task OnInitializedAsync()
    {
        loadedPlaylist = await api.S.GetPlaylistAsync(id);
        var trackPager = loadedPlaylist.Tracks;
        playlistContents = Depaginater<PlaylistTrack>.Depage(trackPager, api.S);


    }

    private string PrintArtists(PlaylistTrack p)
    {
        string result = "";
        foreach (var artist in p.Track.Artists)
        {
            result += artist.Name;
        }
        return result;
    }

}
