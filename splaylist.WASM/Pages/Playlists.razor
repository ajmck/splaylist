@page  "/playlists"

@using SpotifyAPI.Web.Models
@using splaylist.Helpers
@using splaylist.Models
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations

@inject API api
@inject NavigationManager NavigationManager
@inject Cache Cache

    <NeedsAuthentication>
        <p>User: @api.UserProfile.DisplayName</p>
        <p>User ID: @api.UserProfile.Id</p>

        <NavLink class="nav-link" href="other/LibraryTracks">Library</NavLink>
        <NavLink class="nav-link" href="other/TopTracksShortTerm">Top Tracks (short term)</NavLink>
        <NavLink class="nav-link" href="other/TopTracksMediumTerm">Top Tracks (medium term)</NavLink>
        <NavLink class="nav-link" href="other/TopTracksLongTerm">Top Tracks (long term)</NavLink>

        @if (_loadedListingPlaylists != null)
        {
    <SfGrid DataSource="@_loadedListingPlaylists"
             AllowResizing="true"
             AllowGrouping="true"
             AllowSorting="true"
             ShowColumnChooser="true"
             Toolbar="@( new List<string>() { "ColumnChooser"})">
        @*ContextMenuItems="@ContextMenuItems">*@
        <GridEvents RowSelected="SelectionHandler" TValue="ListingPlaylist"></GridEvents>
        <GridColumns>
            <GridColumn Field="@nameof(ListingPlaylist.Name)" HeaderText="Name"></GridColumn>
            <GridColumn Field="@nameof(ListingPlaylist.Owner)" HeaderText="Owner"></GridColumn>

            <GridColumn Field="@nameof(ListingPlaylist.TrackCount)" HeaderText="Track Count"></GridColumn>
            <GridColumn Field="@nameof(ListingPlaylist.Id)" HeaderText="ID" Visible="false"></GridColumn>
            <!-- todo - public doesn't show true if it's someone else's public playlist -->
            <GridColumn Field="@nameof(ListingPlaylist.Public)" HeaderText="Public" Visible="false"></GridColumn>
            <GridColumn Field="@nameof(ListingPlaylist.Collaborative)" HeaderText="Collaborative" Visible="false"></GridColumn>

        </GridColumns>
    </SfGrid> }
                    else
                    {
    <p>Loading Playlists...</p>}
    </NeedsAuthentication>


@code {

    List<ListingPlaylist> _loadedListingPlaylists;

    protected override async Task OnInitializedAsync()
    {
        _loadedListingPlaylists = await Requester.GetUserPlaylistListing(api?.UserProfile?.Id);

    }

    public void SelectionHandler(RowSelectEventArgs<ListingPlaylist> args)
    {
        // unsure how this holds up with multiple selection or right clicking
        var selectedID = args.Data?.Id;
        if (selectedID != null)
            NavigationManager.NavigateTo("playlists/" + selectedID);
    }


    public List<MenuItem> ContextMenuItems = new List<MenuItem>
    {
        // https://ej2.syncfusion.com/documentation/appearance/icons/#available-icons
        new MenuItem {Text="Export", IconCss="fas fa-file-download"},
        new MenuItem {Text="Unfollow", IconCss="fas fa-times"}
    };

    
}
